#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_Sensor.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
//SCK PIN -> D1
//SDA PIN -> D2
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

const unsigned char myBitmap [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xff, 
  0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
  0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x03, 0x00, 0x00, 0x60, 0x00, 0xff, 
  0xff, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 0xff, 0xfe, 0x00, 0x03, 0xc7, 0xf1, 0xe0, 0x00, 0x7f, 
  0xfe, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x3f, 
  0xfc, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xf8, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x1f, 
  0xf8, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x1f, 
  0xf0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x0f, 
  0xf0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x0f, 
  0xe0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x07, 0xe0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x07, 
  0xe0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x07, 0xe0, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x07, 
  0xe0, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x07, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x07, 
  0xe0, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xe0, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x07, 
  0xf0, 0x00, 0x40, 0x7f, 0xff, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x70, 0x0f, 0xf8, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x38, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x1c, 0x0f, 0xf8, 0x00, 0x00, 0x0f, 
  0xf8, 0x00, 0x0e, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x0f, 0xff, 0xf8, 0x00, 0x00, 0x1f, 
  0xf8, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x3f, 
  0xfc, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x7f, 
  0xfe, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0xff, 
  0xff, 0x80, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 
  0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
  0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 
  0xff, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {
    Serial.begin (115200);
     if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(200);
  display.clearDisplay();
  display.setTextColor(WHITE);
  display.setCursor(0,0);
}

void loop() {
  display.clearDisplay();
  display.drawBitmap(16, 0, myBitmap, 64, 64, WHITE);
  display.display();
}
